//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueDot.MsBuild.Tasks.MCore72Application
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewApplication", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class NewApplication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationFolderIdField;
        
        private string ApplicationFormalNameField;
        
        private string CreatedByUserNameField;
        
        private int CustomDeviceHandlerModuleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationFolderId {
            get {
                return this.ApplicationFolderIdField;
            }
            set {
                if ((this.ApplicationFolderIdField.Equals(value) != true)) {
                    this.ApplicationFolderIdField = value;
                    this.RaisePropertyChanged("ApplicationFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ApplicationFormalName {
            get {
                return this.ApplicationFormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationFormalNameField, value) != true)) {
                    this.ApplicationFormalNameField = value;
                    this.RaisePropertyChanged("ApplicationFormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomDeviceHandlerModuleId {
            get {
                return this.CustomDeviceHandlerModuleIdField;
            }
            set {
                if ((this.CustomDeviceHandlerModuleIdField.Equals(value) != true)) {
                    this.CustomDeviceHandlerModuleIdField = value;
                    this.RaisePropertyChanged("CustomDeviceHandlerModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Application", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class Application : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationFolderIdField;
        
        private string ApplicationFormalNameField;
        
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedWhenField;
        
        private int CustomDeviceHandlerModuleIdField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoRemoveFromDeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationFolderId {
            get {
                return this.ApplicationFolderIdField;
            }
            set {
                if ((this.ApplicationFolderIdField.Equals(value) != true)) {
                    this.ApplicationFolderIdField = value;
                    this.RaisePropertyChanged("ApplicationFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ApplicationFormalName {
            get {
                return this.ApplicationFormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationFormalNameField, value) != true)) {
                    this.ApplicationFormalNameField = value;
                    this.RaisePropertyChanged("ApplicationFormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CustomDeviceHandlerModuleId {
            get {
                return this.CustomDeviceHandlerModuleIdField;
            }
            set {
                if ((this.CustomDeviceHandlerModuleIdField.Equals(value) != true)) {
                    this.CustomDeviceHandlerModuleIdField = value;
                    this.RaisePropertyChanged("CustomDeviceHandlerModuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoRemoveFromDevice {
            get {
                return this.NoRemoveFromDeviceField;
            }
            set {
                if ((this.NoRemoveFromDeviceField.Equals(value) != true)) {
                    this.NoRemoveFromDeviceField = value;
                    this.RaisePropertyChanged("NoRemoveFromDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewApplicationFolder", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class NewApplicationFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CreatedByUserNameField;
        
        private string FolderNameField;
        
        private System.Nullable<int> ParentApplicationFolderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FolderName {
            get {
                return this.FolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderNameField, value) != true)) {
                    this.FolderNameField = value;
                    this.RaisePropertyChanged("FolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ParentApplicationFolderId {
            get {
                return this.ParentApplicationFolderIdField;
            }
            set {
                if ((this.ParentApplicationFolderIdField.Equals(value) != true)) {
                    this.ParentApplicationFolderIdField = value;
                    this.RaisePropertyChanged("ParentApplicationFolderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationFolder", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class ApplicationFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedWhenField;
        
        private string FolderNameField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedWhenField;
        
        private System.Nullable<int> ParentApplicationFolderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationFolderId {
            get {
                return this.ApplicationFolderIdField;
            }
            set {
                if ((this.ApplicationFolderIdField.Equals(value) != true)) {
                    this.ApplicationFolderIdField = value;
                    this.RaisePropertyChanged("ApplicationFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FolderName {
            get {
                return this.FolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderNameField, value) != true)) {
                    this.FolderNameField = value;
                    this.RaisePropertyChanged("FolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ParentApplicationFolderId {
            get {
                return this.ParentApplicationFolderIdField;
            }
            set {
                if ((this.ParentApplicationFolderIdField.Equals(value) != true)) {
                    this.ParentApplicationFolderIdField = value;
                    this.RaisePropertyChanged("ParentApplicationFolderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewInstall", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class NewInstall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        private string CreatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallCommandLineField;
        
        private string InstallFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShouldRemovePreviousVersionField;
        
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallCommandLine {
            get {
                return this.InstallCommandLineField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallCommandLineField, value) != true)) {
                    this.InstallCommandLineField = value;
                    this.RaisePropertyChanged("InstallCommandLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InstallFileName {
            get {
                return this.InstallFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallFileNameField, value) != true)) {
                    this.InstallFileNameField = value;
                    this.RaisePropertyChanged("InstallFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShouldRemovePreviousVersion {
            get {
                return this.ShouldRemovePreviousVersionField;
            }
            set {
                if ((this.ShouldRemovePreviousVersionField.Equals(value) != true)) {
                    this.ShouldRemovePreviousVersionField = value;
                    this.RaisePropertyChanged("ShouldRemovePreviousVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallHeader", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class InstallHeader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        private string CreatedByUserNameField;
        
        private System.DateTime CreatedWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallCommandLineField;
        
        private string InstallFileNameField;
        
        private int InstallIdField;
        
        private bool IsActiveInstallField;
        
        private string LastUpdatedByUserNameField;
        
        private System.DateTime LastUpdatedWhenField;
        
        private bool OriginatedOnDeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RemovedWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShouldRemovePreviousVersionField;
        
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallCommandLine {
            get {
                return this.InstallCommandLineField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallCommandLineField, value) != true)) {
                    this.InstallCommandLineField = value;
                    this.RaisePropertyChanged("InstallCommandLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InstallFileName {
            get {
                return this.InstallFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallFileNameField, value) != true)) {
                    this.InstallFileNameField = value;
                    this.RaisePropertyChanged("InstallFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InstallId {
            get {
                return this.InstallIdField;
            }
            set {
                if ((this.InstallIdField.Equals(value) != true)) {
                    this.InstallIdField = value;
                    this.RaisePropertyChanged("InstallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsActiveInstall {
            get {
                return this.IsActiveInstallField;
            }
            set {
                if ((this.IsActiveInstallField.Equals(value) != true)) {
                    this.IsActiveInstallField = value;
                    this.RaisePropertyChanged("IsActiveInstall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool OriginatedOnDevice {
            get {
                return this.OriginatedOnDeviceField;
            }
            set {
                if ((this.OriginatedOnDeviceField.Equals(value) != true)) {
                    this.OriginatedOnDeviceField = value;
                    this.RaisePropertyChanged("OriginatedOnDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RemovedWhen {
            get {
                return this.RemovedWhenField;
            }
            set {
                if ((this.RemovedWhenField.Equals(value) != true)) {
                    this.RemovedWhenField = value;
                    this.RaisePropertyChanged("RemovedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShouldRemovePreviousVersion {
            get {
                return this.ShouldRemovePreviousVersionField;
            }
            set {
                if ((this.ShouldRemovePreviousVersionField.Equals(value) != true)) {
                    this.ShouldRemovePreviousVersionField = value;
                    this.RaisePropertyChanged("ShouldRemovePreviousVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewApplicationSmartFolder", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class NewApplicationSmartFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CreatedByUserNameField;
        
        private string FilterStringField;
        
        private string FolderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FilterString {
            get {
                return this.FilterStringField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterStringField, value) != true)) {
                    this.FilterStringField = value;
                    this.RaisePropertyChanged("FilterString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FolderName {
            get {
                return this.FolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderNameField, value) != true)) {
                    this.FolderNameField = value;
                    this.RaisePropertyChanged("FolderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationSmartFolder", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class ApplicationSmartFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationSmartFolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedWhenField;
        
        private string FilterStringField;
        
        private string FolderNameField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedWhenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationSmartFolderId {
            get {
                return this.ApplicationSmartFolderIdField;
            }
            set {
                if ((this.ApplicationSmartFolderIdField.Equals(value) != true)) {
                    this.ApplicationSmartFolderIdField = value;
                    this.RaisePropertyChanged("ApplicationSmartFolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FilterString {
            get {
                return this.FilterStringField;
            }
            set {
                if ((object.ReferenceEquals(this.FilterStringField, value) != true)) {
                    this.FilterStringField = value;
                    this.RaisePropertyChanged("FilterString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FolderName {
            get {
                return this.FolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FolderNameField, value) != true)) {
                    this.FolderNameField = value;
                    this.RaisePropertyChanged("FolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateDeviceOriginatedInstall", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class UpdateDeviceOriginatedInstall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallCommandLineField;
        
        private string InstallFileNameField;
        
        private int InstallIdField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShouldRemovePreviousVersionField;
        
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallCommandLine {
            get {
                return this.InstallCommandLineField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallCommandLineField, value) != true)) {
                    this.InstallCommandLineField = value;
                    this.RaisePropertyChanged("InstallCommandLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InstallFileName {
            get {
                return this.InstallFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallFileNameField, value) != true)) {
                    this.InstallFileNameField = value;
                    this.RaisePropertyChanged("InstallFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InstallId {
            get {
                return this.InstallIdField;
            }
            set {
                if ((this.InstallIdField.Equals(value) != true)) {
                    this.InstallIdField = value;
                    this.RaisePropertyChanged("InstallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShouldRemovePreviousVersion {
            get {
                return this.ShouldRemovePreviousVersionField;
            }
            set {
                if ((this.ShouldRemovePreviousVersionField.Equals(value) != true)) {
                    this.ShouldRemovePreviousVersionField = value;
                    this.RaisePropertyChanged("ShouldRemovePreviousVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateInstall", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class UpdateInstall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallCommandLineField;
        
        private int InstallIdField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShouldRemovePreviousVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallCommandLine {
            get {
                return this.InstallCommandLineField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallCommandLineField, value) != true)) {
                    this.InstallCommandLineField = value;
                    this.RaisePropertyChanged("InstallCommandLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InstallId {
            get {
                return this.InstallIdField;
            }
            set {
                if ((this.InstallIdField.Equals(value) != true)) {
                    this.InstallIdField = value;
                    this.RaisePropertyChanged("InstallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShouldRemovePreviousVersion {
            get {
                return this.ShouldRemovePreviousVersionField;
            }
            set {
                if ((this.ShouldRemovePreviousVersionField.Equals(value) != true)) {
                    this.ShouldRemovePreviousVersionField = value;
                    this.RaisePropertyChanged("ShouldRemovePreviousVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
    [System.SerializableAttribute()]
    public partial class DefaultFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ErrorIdField;
        
        private string ErrorMessageField;
        
        private System.Guid CorrelationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", ConfigurationName="MCore72Application.IApplicationManagement")]
    public interface IApplicationManagement {
        
        // CODEGEN: Generating message contract since the wrapper name (CreateApplicationRequest) of message CreateApplicationRequest does not match the default value (CreateApplication)
        [System.ServiceModel.OperationContractAttribute(Action="CreateApplication", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationResponse CreateApplication(BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateApplicationFolderRequest) of message CreateApplicationFolderRequest does not match the default value (CreateApplicationFolder)
        [System.ServiceModel.OperationContractAttribute(Action="CreateApplicationFolder", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateApplicationFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateApplicationFolderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderResponse CreateApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateInstallRequest) of message CreateInstallRequest does not match the default value (CreateInstall)
        [System.ServiceModel.OperationContractAttribute(Action="CreateInstall", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateInstallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateInstallDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallResponse CreateInstall(BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateApplicationSmartFolderRequest) of message CreateApplicationSmartFolderRequest does not match the default value (CreateSmartApplicationFolder)
        [System.ServiceModel.OperationContractAttribute(Action="CreateSmartApplicationFolder", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateSmartApplicationFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/CreateSmartApplicationFolderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderResponse CreateSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderRequest request);
        
        // CODEGEN: Generating message contract since the operation GetAllApplicationSmartFolders is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllApplicationSmartFolders", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetAllApplicationSmartFoldersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetAllApplicationSmartFoldersDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersResponse GetAllApplicationSmartFolders(BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetApplicationRequest) of message GetApplicationRequest does not match the default value (GetApplication)
        [System.ServiceModel.OperationContractAttribute(Action="GetApplication", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationResponse GetApplication(BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetApplicationFoldersRequest) of message GetApplicationFoldersRequest does not match the default value (GetApplicationFolders)
        [System.ServiceModel.OperationContractAttribute(Action="GetApplicationFolders", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetApplicationFoldersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetApplicationFoldersDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersResponse GetApplicationFolders(BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetApplicationsRequest) of message GetApplicationsRequest does not match the default value (GetApplications)
        [System.ServiceModel.OperationContractAttribute(Action="GetApplications", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetApplicationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetApplicationsDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsResponse GetApplications(BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetInstallsForApplicationRequest) of message GetInstallsForApplicationRequest does not match the default value (GetInstallsForApplication)
        [System.ServiceModel.OperationContractAttribute(Action="GetInstallsForApplication", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetInstallsForApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/GetInstallsForApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationResponse GetInstallsForApplication(BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation RemoveApplication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RemoveApplication", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationResponse RemoveApplication(BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation RemoveApplicationFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RemoveApplicationFolder", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveApplicationFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveApplicationFolderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderResponse RemoveApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderRequest request);
        
        // CODEGEN: Generating message contract since the operation RemoveInstall is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RemoveInstall", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveInstallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveInstallDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallResponse RemoveInstall(BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallRequest request);
        
        // CODEGEN: Generating message contract since the operation RemoveSmartApplicationFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RemoveSmartApplicationFolder", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveSmartApplicationFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/RemoveSmartApplicationFolderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveSmartApplicationFolderResponse RemoveSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationSmartFolderRequest request);
        
        // CODEGEN: Generating message contract since the operation SetActiveInstall is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SetActiveInstall", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/SetActiveInstallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/SetActiveInstallDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallResponse SetActiveInstall(BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateApplication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateApplication", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationResponse UpdateApplication(BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateApplicationFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateApplicationFolder", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateApplicationFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateApplicationFolderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderResponse UpdateApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (UpdateDeviceOriginatedInstallRequest) of message UpdateDeviceOriginatedInstallRequest does not match the default value (UpdateDeviceOriginatedInstall)
        [System.ServiceModel.OperationContractAttribute(Action="UpdateDeviceOriginatedInstall", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateDeviceOriginatedInstallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateDeviceOriginatedInstallDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallResponse UpdateDeviceOriginatedInstall(BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateInstall is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateInstall", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateInstallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateInstallDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallResponse UpdateInstall(BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateSmartApplicationFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateSmartApplicationFolder", ReplyAction="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateSmartApplicationFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72Application.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01/IApplic" +
            "ationManagement/UpdateSmartApplicationFolderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateSmartApplicationFolderResponse UpdateSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationSmartFolderRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.NewApplication Application;
        
        public CreateApplicationRequest() {
        }
        
        public CreateApplicationRequest(BlueDot.MsBuild.Tasks.MCore72Application.NewApplication Application) {
            this.Application = Application;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateApplicationResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.Application Application;
        
        public CreateApplicationResponse() {
        }
        
        public CreateApplicationResponse(BlueDot.MsBuild.Tasks.MCore72Application.Application Application) {
            this.Application = Application;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateApplicationFolderRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateApplicationFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.NewApplicationFolder Folder;
        
        public CreateApplicationFolderRequest() {
        }
        
        public CreateApplicationFolderRequest(BlueDot.MsBuild.Tasks.MCore72Application.NewApplicationFolder Folder) {
            this.Folder = Folder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateApplicationFolderResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateApplicationFolderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder Folder;
        
        public CreateApplicationFolderResponse() {
        }
        
        public CreateApplicationFolderResponse(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder Folder) {
            this.Folder = Folder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInstallRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateInstallRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01")]
        public BlueDot.MsBuild.Tasks.MCore72Application.NewInstall NewInstall;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public System.IO.Stream InstallStream;
        
        public CreateInstallRequest() {
        }
        
        public CreateInstallRequest(BlueDot.MsBuild.Tasks.MCore72Application.NewInstall NewInstall, System.IO.Stream InstallStream) {
            this.NewInstall = NewInstall;
            this.InstallStream = InstallStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateInstallResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateInstallResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader InstallHeader;
        
        public CreateInstallResponse() {
        }
        
        public CreateInstallResponse(BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader InstallHeader) {
            this.InstallHeader = InstallHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateApplicationSmartFolderRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateApplicationSmartFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.NewApplicationSmartFolder Folder;
        
        public CreateApplicationSmartFolderRequest() {
        }
        
        public CreateApplicationSmartFolderRequest(BlueDot.MsBuild.Tasks.MCore72Application.NewApplicationSmartFolder Folder) {
            this.Folder = Folder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateApplicationSmartFolderResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateApplicationSmartFolderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder Folder;
        
        public CreateApplicationSmartFolderResponse() {
        }
        
        public CreateApplicationSmartFolderResponse(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder Folder) {
            this.Folder = Folder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllApplicationSmartFoldersRequest {
        
        public GetAllApplicationSmartFoldersRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllApplicationSmartFoldersResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetAllApplicationSmartFoldersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder[] ApplicationSmartFolders;
        
        public GetAllApplicationSmartFoldersResponse() {
        }
        
        public GetAllApplicationSmartFoldersResponse(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder[] ApplicationSmartFolders) {
            this.ApplicationSmartFolders = ApplicationSmartFolders;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int ApplicationId;
        
        public GetApplicationRequest() {
        }
        
        public GetApplicationRequest(int ApplicationId) {
            this.ApplicationId = ApplicationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.Application Application;
        
        public GetApplicationResponse() {
        }
        
        public GetApplicationResponse(BlueDot.MsBuild.Tasks.MCore72Application.Application Application) {
            this.Application = Application;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationFoldersRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationFoldersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public System.Nullable<int> ParentApplicationFolderId;
        
        public GetApplicationFoldersRequest() {
        }
        
        public GetApplicationFoldersRequest(System.Nullable<int> ParentApplicationFolderId) {
            this.ParentApplicationFolderId = ParentApplicationFolderId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationFoldersResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationFoldersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder[] ApplicationFolders;
        
        public GetApplicationFoldersResponse() {
        }
        
        public GetApplicationFoldersResponse(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder[] ApplicationFolders) {
            this.ApplicationFolders = ApplicationFolders;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationsRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int ApplicationFolderId;
        
        public GetApplicationsRequest() {
        }
        
        public GetApplicationsRequest(int ApplicationFolderId) {
            this.ApplicationFolderId = ApplicationFolderId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationsResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.Application[] Applications;
        
        public GetApplicationsResponse() {
        }
        
        public GetApplicationsResponse(BlueDot.MsBuild.Tasks.MCore72Application.Application[] Applications) {
            this.Applications = Applications;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInstallsForApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetInstallsForApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int ApplicationId;
        
        public GetInstallsForApplicationRequest() {
        }
        
        public GetInstallsForApplicationRequest(int ApplicationId) {
            this.ApplicationId = ApplicationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInstallsForApplicationResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetInstallsForApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader[] Installs;
        
        public GetInstallsForApplicationResponse() {
        }
        
        public GetInstallsForApplicationResponse(BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader[] Installs) {
            this.Installs = Installs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class RemoveApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int ApplicationId;
        
        public RemoveApplicationRequest() {
        }
        
        public RemoveApplicationRequest(int ApplicationId) {
            this.ApplicationId = ApplicationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveApplicationResponse {
        
        public RemoveApplicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveApplicationFolderRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class RemoveApplicationFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int ApplicationFolderId;
        
        public RemoveApplicationFolderRequest() {
        }
        
        public RemoveApplicationFolderRequest(int ApplicationFolderId) {
            this.ApplicationFolderId = ApplicationFolderId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveApplicationFolderResponse {
        
        public RemoveApplicationFolderResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveInstallRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class RemoveInstallRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int InstallId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=1)]
        public string LastUpdatedByUserName;
        
        public RemoveInstallRequest() {
        }
        
        public RemoveInstallRequest(int InstallId, string LastUpdatedByUserName) {
            this.InstallId = InstallId;
            this.LastUpdatedByUserName = LastUpdatedByUserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveInstallResponse {
        
        public RemoveInstallResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveApplicationSmartFolderRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class RemoveApplicationSmartFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int ApplicationSmartFolderId;
        
        public RemoveApplicationSmartFolderRequest() {
        }
        
        public RemoveApplicationSmartFolderRequest(int ApplicationSmartFolderId) {
            this.ApplicationSmartFolderId = ApplicationSmartFolderId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveSmartApplicationFolderResponse {
        
        public RemoveSmartApplicationFolderResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActiveInstallRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class SetActiveInstallRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public int InstallId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=1)]
        public string LastUpdatedByUserName;
        
        public SetActiveInstallRequest() {
        }
        
        public SetActiveInstallRequest(int InstallId, string LastUpdatedByUserName) {
            this.InstallId = InstallId;
            this.LastUpdatedByUserName = LastUpdatedByUserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetActiveInstallResponse {
        
        public SetActiveInstallResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.Application Application;
        
        public UpdateApplicationRequest() {
        }
        
        public UpdateApplicationRequest(BlueDot.MsBuild.Tasks.MCore72Application.Application Application) {
            this.Application = Application;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateApplicationResponse {
        
        public UpdateApplicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateApplicationFolderRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateApplicationFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder Folder;
        
        public UpdateApplicationFolderRequest() {
        }
        
        public UpdateApplicationFolderRequest(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder Folder) {
            this.Folder = Folder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateApplicationFolderResponse {
        
        public UpdateApplicationFolderResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceOriginatedInstallRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateDeviceOriginatedInstallRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01")]
        public BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstall UpdateInstall;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public System.IO.Stream InstallStream;
        
        public UpdateDeviceOriginatedInstallRequest() {
        }
        
        public UpdateDeviceOriginatedInstallRequest(BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstall UpdateInstall, System.IO.Stream InstallStream) {
            this.UpdateInstall = UpdateInstall;
            this.InstallStream = InstallStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateDeviceOriginatedInstallResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateDeviceOriginatedInstallResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader InstallHeader;
        
        public UpdateDeviceOriginatedInstallResponse() {
        }
        
        public UpdateDeviceOriginatedInstallResponse(BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader InstallHeader) {
            this.InstallHeader = InstallHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInstallRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateInstallRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstall ExistingInstall;
        
        public UpdateInstallRequest() {
        }
        
        public UpdateInstallRequest(BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstall ExistingInstall) {
            this.ExistingInstall = ExistingInstall;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateInstallResponse {
        
        public UpdateInstallResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateApplicationSmartFolderRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateApplicationSmartFolderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ApplicationManagement.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder Folder;
        
        public UpdateApplicationSmartFolderRequest() {
        }
        
        public UpdateApplicationSmartFolderRequest(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder Folder) {
            this.Folder = Folder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateSmartApplicationFolderResponse {
        
        public UpdateSmartApplicationFolderResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IApplicationManagementChannel : BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ApplicationManagementClient : System.ServiceModel.ClientBase<BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement>, BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement {
        
        public ApplicationManagementClient() {
        }
        
        public ApplicationManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.CreateApplication(BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationRequest request) {
            return base.Channel.CreateApplication(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.Application CreateApplication(BlueDot.MsBuild.Tasks.MCore72Application.NewApplication Application) {
            BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationRequest();
            inValue.Application = Application;
            BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).CreateApplication(inValue);
            return retVal.Application;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.CreateApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderRequest request) {
            return base.Channel.CreateApplicationFolder(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder CreateApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.NewApplicationFolder Folder) {
            BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderRequest();
            inValue.Folder = Folder;
            BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationFolderResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).CreateApplicationFolder(inValue);
            return retVal.Folder;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.CreateInstall(BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallRequest request) {
            return base.Channel.CreateInstall(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader CreateInstall(BlueDot.MsBuild.Tasks.MCore72Application.NewInstall NewInstall, System.IO.Stream InstallStream) {
            BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallRequest();
            inValue.NewInstall = NewInstall;
            inValue.InstallStream = InstallStream;
            BlueDot.MsBuild.Tasks.MCore72Application.CreateInstallResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).CreateInstall(inValue);
            return retVal.InstallHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.CreateSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderRequest request) {
            return base.Channel.CreateSmartApplicationFolder(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder CreateSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.NewApplicationSmartFolder Folder) {
            BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderRequest();
            inValue.Folder = Folder;
            BlueDot.MsBuild.Tasks.MCore72Application.CreateApplicationSmartFolderResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).CreateSmartApplicationFolder(inValue);
            return retVal.Folder;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.GetAllApplicationSmartFolders(BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersRequest request) {
            return base.Channel.GetAllApplicationSmartFolders(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder[] GetAllApplicationSmartFolders() {
            BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersRequest();
            BlueDot.MsBuild.Tasks.MCore72Application.GetAllApplicationSmartFoldersResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).GetAllApplicationSmartFolders(inValue);
            return retVal.ApplicationSmartFolders;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.GetApplication(BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationRequest request) {
            return base.Channel.GetApplication(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.Application GetApplication(int ApplicationId) {
            BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationRequest();
            inValue.ApplicationId = ApplicationId;
            BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).GetApplication(inValue);
            return retVal.Application;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.GetApplicationFolders(BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersRequest request) {
            return base.Channel.GetApplicationFolders(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder[] GetApplicationFolders(System.Nullable<int> ParentApplicationFolderId) {
            BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersRequest();
            inValue.ParentApplicationFolderId = ParentApplicationFolderId;
            BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationFoldersResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).GetApplicationFolders(inValue);
            return retVal.ApplicationFolders;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.GetApplications(BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsRequest request) {
            return base.Channel.GetApplications(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.Application[] GetApplications(int ApplicationFolderId) {
            BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsRequest();
            inValue.ApplicationFolderId = ApplicationFolderId;
            BlueDot.MsBuild.Tasks.MCore72Application.GetApplicationsResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).GetApplications(inValue);
            return retVal.Applications;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.GetInstallsForApplication(BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationRequest request) {
            return base.Channel.GetInstallsForApplication(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader[] GetInstallsForApplication(int ApplicationId) {
            BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationRequest();
            inValue.ApplicationId = ApplicationId;
            BlueDot.MsBuild.Tasks.MCore72Application.GetInstallsForApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).GetInstallsForApplication(inValue);
            return retVal.Installs;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.RemoveApplication(BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationRequest request) {
            return base.Channel.RemoveApplication(request);
        }
        
        public void RemoveApplication(int ApplicationId) {
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationRequest();
            inValue.ApplicationId = ApplicationId;
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).RemoveApplication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.RemoveApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderRequest request) {
            return base.Channel.RemoveApplicationFolder(request);
        }
        
        public void RemoveApplicationFolder(int ApplicationFolderId) {
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderRequest();
            inValue.ApplicationFolderId = ApplicationFolderId;
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationFolderResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).RemoveApplicationFolder(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.RemoveInstall(BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallRequest request) {
            return base.Channel.RemoveInstall(request);
        }
        
        public void RemoveInstall(int InstallId, string LastUpdatedByUserName) {
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallRequest();
            inValue.InstallId = InstallId;
            inValue.LastUpdatedByUserName = LastUpdatedByUserName;
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveInstallResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).RemoveInstall(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.RemoveSmartApplicationFolderResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.RemoveSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationSmartFolderRequest request) {
            return base.Channel.RemoveSmartApplicationFolder(request);
        }
        
        public void RemoveSmartApplicationFolder(int ApplicationSmartFolderId) {
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationSmartFolderRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.RemoveApplicationSmartFolderRequest();
            inValue.ApplicationSmartFolderId = ApplicationSmartFolderId;
            BlueDot.MsBuild.Tasks.MCore72Application.RemoveSmartApplicationFolderResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).RemoveSmartApplicationFolder(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.SetActiveInstall(BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallRequest request) {
            return base.Channel.SetActiveInstall(request);
        }
        
        public void SetActiveInstall(int InstallId, string LastUpdatedByUserName) {
            BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallRequest();
            inValue.InstallId = InstallId;
            inValue.LastUpdatedByUserName = LastUpdatedByUserName;
            BlueDot.MsBuild.Tasks.MCore72Application.SetActiveInstallResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).SetActiveInstall(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.UpdateApplication(BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationRequest request) {
            return base.Channel.UpdateApplication(request);
        }
        
        public void UpdateApplication(BlueDot.MsBuild.Tasks.MCore72Application.Application Application) {
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationRequest();
            inValue.Application = Application;
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).UpdateApplication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.UpdateApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderRequest request) {
            return base.Channel.UpdateApplicationFolder(request);
        }
        
        public void UpdateApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationFolder Folder) {
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderRequest();
            inValue.Folder = Folder;
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationFolderResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).UpdateApplicationFolder(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.UpdateDeviceOriginatedInstall(BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallRequest request) {
            return base.Channel.UpdateDeviceOriginatedInstall(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72Application.InstallHeader UpdateDeviceOriginatedInstall(BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstall UpdateInstall, System.IO.Stream InstallStream) {
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallRequest();
            inValue.UpdateInstall = UpdateInstall;
            inValue.InstallStream = InstallStream;
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateDeviceOriginatedInstallResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).UpdateDeviceOriginatedInstall(inValue);
            return retVal.InstallHeader;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.UpdateInstall(BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallRequest request) {
            return base.Channel.UpdateInstall(request);
        }
        
        public void UpdateInstall(BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstall ExistingInstall) {
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallRequest();
            inValue.ExistingInstall = ExistingInstall;
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateInstallResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).UpdateInstall(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72Application.UpdateSmartApplicationFolderResponse BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement.UpdateSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationSmartFolderRequest request) {
            return base.Channel.UpdateSmartApplicationFolder(request);
        }
        
        public void UpdateSmartApplicationFolder(BlueDot.MsBuild.Tasks.MCore72Application.ApplicationSmartFolder Folder) {
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationSmartFolderRequest inValue = new BlueDot.MsBuild.Tasks.MCore72Application.UpdateApplicationSmartFolderRequest();
            inValue.Folder = Folder;
            BlueDot.MsBuild.Tasks.MCore72Application.UpdateSmartApplicationFolderResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72Application.IApplicationManagement)(this)).UpdateSmartApplicationFolder(inValue);
        }
    }
}
