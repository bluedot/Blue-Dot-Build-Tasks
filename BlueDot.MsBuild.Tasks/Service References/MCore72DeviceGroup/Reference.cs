//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueDot.MsBuild.Tasks.MCore72DeviceGroup
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupInstallUpdate", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupInstallUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeployToDeviceDateField;
        
        private int DeviceGroupIdField;
        
        private int InstallIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallOnDeviceDateField;
        
        private bool IsActiveInstallField;
        
        private string LastUpdatedByUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeployToDeviceDate {
            get {
                return this.DeployToDeviceDateField;
            }
            set {
                if ((this.DeployToDeviceDateField.Equals(value) != true)) {
                    this.DeployToDeviceDateField = value;
                    this.RaisePropertyChanged("DeployToDeviceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DeviceGroupId {
            get {
                return this.DeviceGroupIdField;
            }
            set {
                if ((this.DeviceGroupIdField.Equals(value) != true)) {
                    this.DeviceGroupIdField = value;
                    this.RaisePropertyChanged("DeviceGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InstallId {
            get {
                return this.InstallIdField;
            }
            set {
                if ((this.InstallIdField.Equals(value) != true)) {
                    this.InstallIdField = value;
                    this.RaisePropertyChanged("InstallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallOnDeviceDate {
            get {
                return this.InstallOnDeviceDateField;
            }
            set {
                if ((this.InstallOnDeviceDateField.Equals(value) != true)) {
                    this.InstallOnDeviceDateField = value;
                    this.RaisePropertyChanged("InstallOnDeviceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsActiveInstall {
            get {
                return this.IsActiveInstallField;
            }
            set {
                if ((this.IsActiveInstallField.Equals(value) != true)) {
                    this.IsActiveInstallField = value;
                    this.RaisePropertyChanged("IsActiveInstall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupApplication", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupApplication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ApplicationFormalNameField;
        
        private int ApplicationIdField;
        
        private int ApplicationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedWhenField;
        
        private int DeviceGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupInstall[] DeviceGroupInstallsField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RemovedFromDeviceWhenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ApplicationFormalName {
            get {
                return this.ApplicationFormalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationFormalNameField, value) != true)) {
                    this.ApplicationFormalNameField = value;
                    this.RaisePropertyChanged("ApplicationFormalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationTypeId {
            get {
                return this.ApplicationTypeIdField;
            }
            set {
                if ((this.ApplicationTypeIdField.Equals(value) != true)) {
                    this.ApplicationTypeIdField = value;
                    this.RaisePropertyChanged("ApplicationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DeviceGroupId {
            get {
                return this.DeviceGroupIdField;
            }
            set {
                if ((this.DeviceGroupIdField.Equals(value) != true)) {
                    this.DeviceGroupIdField = value;
                    this.RaisePropertyChanged("DeviceGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupInstall[] DeviceGroupInstalls {
            get {
                return this.DeviceGroupInstallsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceGroupInstallsField, value) != true)) {
                    this.DeviceGroupInstallsField = value;
                    this.RaisePropertyChanged("DeviceGroupInstalls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RemovedFromDeviceWhen {
            get {
                return this.RemovedFromDeviceWhenField;
            }
            set {
                if ((this.RemovedFromDeviceWhenField.Equals(value) != true)) {
                    this.RemovedFromDeviceWhenField = value;
                    this.RaisePropertyChanged("RemovedFromDeviceWhen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupInstall", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupInstall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CreatedByUserNameField;
        
        private System.DateTime CreatedWhenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeployToDeviceDateField;
        
        private int DeviceGroupIdField;
        
        private string InstallFileNameField;
        
        private int InstallIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallOnDeviceDateField;
        
        private bool IsActiveInstallField;
        
        private string LastUpdatedByUserNameField;
        
        private System.DateTime LastUpdatedWhenField;
        
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeployToDeviceDate {
            get {
                return this.DeployToDeviceDateField;
            }
            set {
                if ((this.DeployToDeviceDateField.Equals(value) != true)) {
                    this.DeployToDeviceDateField = value;
                    this.RaisePropertyChanged("DeployToDeviceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DeviceGroupId {
            get {
                return this.DeviceGroupIdField;
            }
            set {
                if ((this.DeviceGroupIdField.Equals(value) != true)) {
                    this.DeviceGroupIdField = value;
                    this.RaisePropertyChanged("DeviceGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InstallFileName {
            get {
                return this.InstallFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallFileNameField, value) != true)) {
                    this.InstallFileNameField = value;
                    this.RaisePropertyChanged("InstallFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InstallId {
            get {
                return this.InstallIdField;
            }
            set {
                if ((this.InstallIdField.Equals(value) != true)) {
                    this.InstallIdField = value;
                    this.RaisePropertyChanged("InstallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallOnDeviceDate {
            get {
                return this.InstallOnDeviceDateField;
            }
            set {
                if ((this.InstallOnDeviceDateField.Equals(value) != true)) {
                    this.InstallOnDeviceDateField = value;
                    this.RaisePropertyChanged("InstallOnDeviceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsActiveInstall {
            get {
                return this.IsActiveInstallField;
            }
            set {
                if ((this.IsActiveInstallField.Equals(value) != true)) {
                    this.IsActiveInstallField = value;
                    this.RaisePropertyChanged("IsActiveInstall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupApplicationUpdate", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupApplicationUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ApplicationIdField;
        
        private int DeviceGroupIdField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RemovedFromDeviceWhenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int DeviceGroupId {
            get {
                return this.DeviceGroupIdField;
            }
            set {
                if ((this.DeviceGroupIdField.Equals(value) != true)) {
                    this.DeviceGroupIdField = value;
                    this.RaisePropertyChanged("DeviceGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RemovedFromDeviceWhen {
            get {
                return this.RemovedFromDeviceWhenField;
            }
            set {
                if ((this.RemovedFromDeviceWhenField.Equals(value) != true)) {
                    this.RemovedFromDeviceWhenField = value;
                    this.RaisePropertyChanged("RemovedFromDeviceWhen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupCommandAddition", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupCommandAddition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandTextField;
        
        private string CreatedByUserNameField;
        
        private BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceCommandTypeEnum TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandText {
            get {
                return this.CommandTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandTextField, value) != true)) {
                    this.CommandTextField = value;
                    this.RaisePropertyChanged("CommandText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceCommandTypeEnum Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceCommandTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/BlueDot.Server.Client.Wcf.DataContracts")]
    public enum DeviceCommandTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceReset = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageReset = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageReInstall = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HardResetDevice = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SoftResetDevice = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayAdminMessage = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RedirectToNewEnvironment = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupBase", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupAddition))]
    public partial class DeviceGroupBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSettingsField;
        
        private System.Nullable<int> ParentIdField;
        
        private string NameField;
        
        private string NotesField;
        
        private string TimeZoneIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSettings {
            get {
                return this.DeviceSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSettingsField, value) != true)) {
                    this.DeviceSettingsField = value;
                    this.RaisePropertyChanged("DeviceSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string TimeZoneId {
            get {
                return this.TimeZoneIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneIdField, value) != true)) {
                    this.TimeZoneIdField = value;
                    this.RaisePropertyChanged("TimeZoneId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroup", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroup : BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationsToActOnField;
        
        private int IdField;
        
        private string LastUpdatedByUserField;
        
        private System.DateTime CreatedWhenField;
        
        private System.DateTime LastUpdatedWhenField;
        
        private string CreatedByUserField;
        
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationsToActOn {
            get {
                return this.ApplicationsToActOnField;
            }
            set {
                if ((this.ApplicationsToActOnField.Equals(value) != true)) {
                    this.ApplicationsToActOnField = value;
                    this.RaisePropertyChanged("ApplicationsToActOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUser {
            get {
                return this.LastUpdatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserField, value) != true)) {
                    this.LastUpdatedByUserField = value;
                    this.RaisePropertyChanged("LastUpdatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupUpdate", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupUpdate : BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupBase {
        
        private int IdField;
        
        private string LastUpdatedByUserField;
        
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUser {
            get {
                return this.LastUpdatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserField, value) != true)) {
                    this.LastUpdatedByUserField = value;
                    this.RaisePropertyChanged("LastUpdatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupAddition", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupAddition : BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupBase {
        
        private string CreatedByUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupAlreadyExists))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupDoesNotExist))]
    public partial class DefaultFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ErrorIdField;
        
        private string ErrorMessageField;
        
        private System.Guid CorrelationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupAlreadyExists", Namespace="http://Server.FaultContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class GroupAlreadyExists : BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class GroupDoesNotExist : BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", ConfigurationName="MCore72DeviceGroup.IDeviceGroupManagement")]
    public interface IDeviceGroupManagement {
        
        // CODEGEN: Generating message contract since the operation UpdateInstallForGroupApplication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateInstallForGroupApplication", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "InstallForGroupApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "InstallForGroupApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationResponse UpdateInstallForGroupApplication(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation AssociateApplications is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AssociateApplications", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Associ" +
            "ateApplicationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Associ" +
            "ateApplicationsDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsResponse AssociateApplications(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetApplicationsAssociatedToGroupRequest) of message GetApplicationsAssociatedToGroupRequest does not match the default value (GetApplicationsAssociatedToGroup)
        [System.ServiceModel.OperationContractAttribute(Action="GetAssociatedApplications", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetApp" +
            "licationsAssociatedToGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetApp" +
            "licationsAssociatedToGroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupResponse GetApplicationsAssociatedToGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateAssociatedApplication is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAssociatedApplication", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "AssociatedApplicationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "AssociatedApplicationDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationResponse UpdateAssociatedApplication(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation CreateDeviceGroupCommand is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="CreateDeviceGroupCommand", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "DeviceGroupCommandResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "DeviceGroupCommandDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandResponse CreateDeviceGroupCommand(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandRequest request);
        
        // CODEGEN: Generating message contract since the operation CreateGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="CreateGroup", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "GroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupAlreadyExists), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "GroupGroupAlreadyExistsFault", Name="GroupAlreadyExists", Namespace="http://Server.FaultContracts/2007/01")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "GroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupResponse CreateGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetChildGroupsRequest) of message GetChildGroupsRequest does not match the default value (GetChildGroups)
        [System.ServiceModel.OperationContractAttribute(Action="GetChildGroups", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetChi" +
            "ldGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetChi" +
            "ldGroupsDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupDoesNotExist), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetChi" +
            "ldGroupsGroupDoesNotExistFault", Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsResponse GetChildGroups(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsRequest request);
        
        // CODEGEN: Generating message contract since the operation RemoveGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RemoveGroup", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupDoesNotExist), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupGroupDoesNotExistFault", Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupAlreadyExists), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupCannotDeleteGroupFault", Name="GroupAlreadyExists", Namespace="http://Server.FaultContracts/2007/01")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupResponse RemoveGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateGroup", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "GroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "GroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GroupDoesNotExist), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "GroupGroupDoesNotExistFault", Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupResponse UpdateGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInstallForGroupApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateInstallForGroupApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupInstallUpdate GroupInstallUpdate;
        
        public UpdateInstallForGroupApplicationRequest() {
        }
        
        public UpdateInstallForGroupApplicationRequest(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupInstallUpdate GroupInstallUpdate) {
            this.GroupInstallUpdate = GroupInstallUpdate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateInstallForGroupApplicationResponse {
        
        public UpdateInstallForGroupApplicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssociateApplicationsRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class AssociateApplicationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public int[] ApplicationIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=1)]
        public string CreatedByUserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=2)]
        public int GroupId;
        
        public AssociateApplicationsRequest() {
        }
        
        public AssociateApplicationsRequest(int[] ApplicationIds, string CreatedByUserName, int GroupId) {
            this.ApplicationIds = ApplicationIds;
            this.CreatedByUserName = CreatedByUserName;
            this.GroupId = GroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AssociateApplicationsResponse {
        
        public AssociateApplicationsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationsAssociatedToGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationsAssociatedToGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public int DeviceGroupId;
        
        public GetApplicationsAssociatedToGroupRequest() {
        }
        
        public GetApplicationsAssociatedToGroupRequest(int DeviceGroupId) {
            this.DeviceGroupId = DeviceGroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationsAssociatedToGroupResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetApplicationsAssociatedToGroupResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupApplication[] DeviceGroupApplications;
        
        public GetApplicationsAssociatedToGroupResponse() {
        }
        
        public GetApplicationsAssociatedToGroupResponse(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupApplication[] DeviceGroupApplications) {
            this.DeviceGroupApplications = DeviceGroupApplications;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAssociatedApplicationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateAssociatedApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupApplicationUpdate DeviceGroupApplicationUpdate;
        
        public UpdateAssociatedApplicationRequest() {
        }
        
        public UpdateAssociatedApplicationRequest(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupApplicationUpdate DeviceGroupApplicationUpdate) {
            this.DeviceGroupApplicationUpdate = DeviceGroupApplicationUpdate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAssociatedApplicationResponse {
        
        public UpdateAssociatedApplicationResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateDeviceGroupCommandRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateDeviceGroupCommandRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupCommandAddition NewGroupDeviceCommand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=1)]
        public int DeviceGroupId;
        
        public CreateDeviceGroupCommandRequest() {
        }
        
        public CreateDeviceGroupCommandRequest(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupCommandAddition NewGroupDeviceCommand, int DeviceGroupId) {
            this.NewGroupDeviceCommand = NewGroupDeviceCommand;
            this.DeviceGroupId = DeviceGroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateDeviceGroupCommandResponse {
        
        public CreateDeviceGroupCommandResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupAddition NewGroup;
        
        public CreateGroupRequest() {
        }
        
        public CreateGroupRequest(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupAddition NewGroup) {
            this.NewGroup = NewGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateGroupResponse {
        
        public CreateGroupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChildGroupsRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetChildGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public System.Nullable<int> ParentGroupId;
        
        public GetChildGroupsRequest() {
        }
        
        public GetChildGroupsRequest(System.Nullable<int> ParentGroupId) {
            this.ParentGroupId = ParentGroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChildGroupsResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetChildGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroup[] ChildGroups;
        
        public GetChildGroupsResponse() {
        }
        
        public GetChildGroupsResponse(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroup[] ChildGroups) {
            this.ChildGroups = ChildGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class RemoveGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public int GroupId;
        
        public RemoveGroupRequest() {
        }
        
        public RemoveGroupRequest(int GroupId) {
            this.GroupId = GroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveGroupResponse {
        
        public RemoveGroupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupUpdate ExistingGroup;
        
        public UpdateGroupRequest() {
        }
        
        public UpdateGroupRequest(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupUpdate ExistingGroup) {
            this.ExistingGroup = ExistingGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateGroupResponse {
        
        public UpdateGroupResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IDeviceGroupManagementChannel : BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DeviceGroupManagementClient : System.ServiceModel.ClientBase<BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement>, BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement {
        
        public DeviceGroupManagementClient() {
        }
        
        public DeviceGroupManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceGroupManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceGroupManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceGroupManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.UpdateInstallForGroupApplication(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationRequest request) {
            return base.Channel.UpdateInstallForGroupApplication(request);
        }
        
        public void UpdateInstallForGroupApplication(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupInstallUpdate GroupInstallUpdate) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationRequest();
            inValue.GroupInstallUpdate = GroupInstallUpdate;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateInstallForGroupApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).UpdateInstallForGroupApplication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.AssociateApplications(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsRequest request) {
            return base.Channel.AssociateApplications(request);
        }
        
        public void AssociateApplications(int[] ApplicationIds, string CreatedByUserName, int GroupId) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsRequest();
            inValue.ApplicationIds = ApplicationIds;
            inValue.CreatedByUserName = CreatedByUserName;
            inValue.GroupId = GroupId;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.AssociateApplicationsResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).AssociateApplications(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.GetApplicationsAssociatedToGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupRequest request) {
            return base.Channel.GetApplicationsAssociatedToGroup(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupApplication[] GetApplicationsAssociatedToGroup(int DeviceGroupId) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupRequest();
            inValue.DeviceGroupId = DeviceGroupId;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetApplicationsAssociatedToGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).GetApplicationsAssociatedToGroup(inValue);
            return retVal.DeviceGroupApplications;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.UpdateAssociatedApplication(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationRequest request) {
            return base.Channel.UpdateAssociatedApplication(request);
        }
        
        public void UpdateAssociatedApplication(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupApplicationUpdate DeviceGroupApplicationUpdate) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationRequest();
            inValue.DeviceGroupApplicationUpdate = DeviceGroupApplicationUpdate;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateAssociatedApplicationResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).UpdateAssociatedApplication(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.CreateDeviceGroupCommand(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandRequest request) {
            return base.Channel.CreateDeviceGroupCommand(request);
        }
        
        public void CreateDeviceGroupCommand(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupCommandAddition NewGroupDeviceCommand, int DeviceGroupId) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandRequest();
            inValue.NewGroupDeviceCommand = NewGroupDeviceCommand;
            inValue.DeviceGroupId = DeviceGroupId;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateDeviceGroupCommandResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).CreateDeviceGroupCommand(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.CreateGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupRequest request) {
            return base.Channel.CreateGroup(request);
        }
        
        public void CreateGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupAddition NewGroup) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupRequest();
            inValue.NewGroup = NewGroup;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.CreateGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).CreateGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.GetChildGroups(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsRequest request) {
            return base.Channel.GetChildGroups(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroup[] GetChildGroups(System.Nullable<int> ParentGroupId) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsRequest();
            inValue.ParentGroupId = ParentGroupId;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.GetChildGroupsResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).GetChildGroups(inValue);
            return retVal.ChildGroups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.RemoveGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupRequest request) {
            return base.Channel.RemoveGroup(request);
        }
        
        public void RemoveGroup(int GroupId) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupRequest();
            inValue.GroupId = GroupId;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.RemoveGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).RemoveGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupResponse BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement.UpdateGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupRequest request) {
            return base.Channel.UpdateGroup(request);
        }
        
        public void UpdateGroup(BlueDot.MsBuild.Tasks.MCore72DeviceGroup.DeviceGroupUpdate ExistingGroup) {
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupRequest();
            inValue.ExistingGroup = ExistingGroup;
            BlueDot.MsBuild.Tasks.MCore72DeviceGroup.UpdateGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCore72DeviceGroup.IDeviceGroupManagement)(this)).UpdateGroup(inValue);
        }
    }
}
