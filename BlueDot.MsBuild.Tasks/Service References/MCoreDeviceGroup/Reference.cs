//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueDot.MsBuild.Tasks.MCoreDeviceGroup
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupAssociationAddition", Namespace="http://BlueDot.Mnow.Server.Runtime.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupAssociationAddition : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationBase {
        
        private System.DateTime CreatedWhenField;
        
        private string CreatedByUserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string CreatedByUserName {
            get {
                return this.CreatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserNameField, value) != true)) {
                    this.CreatedByUserNameField = value;
                    this.RaisePropertyChanged("CreatedByUserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupAssociationBase", Namespace="http://BlueDot.Mnow.Server.Runtime.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationAddition))]
    public partial class DeviceGroupAssociationBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallOnDeviceWindowEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallOnDeviceWindowStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstallOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstallRetriesField;
        
        private int DeploymentPackageIdField;
        
        private int DeviceGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeploymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RemovalDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallOnDeviceWindowEnd {
            get {
                return this.InstallOnDeviceWindowEndField;
            }
            set {
                if ((this.InstallOnDeviceWindowEndField.Equals(value) != true)) {
                    this.InstallOnDeviceWindowEndField = value;
                    this.RaisePropertyChanged("InstallOnDeviceWindowEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallOnDeviceWindowStart {
            get {
                return this.InstallOnDeviceWindowStartField;
            }
            set {
                if ((this.InstallOnDeviceWindowStartField.Equals(value) != true)) {
                    this.InstallOnDeviceWindowStartField = value;
                    this.RaisePropertyChanged("InstallOnDeviceWindowStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstallOrder {
            get {
                return this.InstallOrderField;
            }
            set {
                if ((this.InstallOrderField.Equals(value) != true)) {
                    this.InstallOrderField = value;
                    this.RaisePropertyChanged("InstallOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstallRetries {
            get {
                return this.InstallRetriesField;
            }
            set {
                if ((this.InstallRetriesField.Equals(value) != true)) {
                    this.InstallRetriesField = value;
                    this.RaisePropertyChanged("InstallRetries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int DeploymentPackageId {
            get {
                return this.DeploymentPackageIdField;
            }
            set {
                if ((this.DeploymentPackageIdField.Equals(value) != true)) {
                    this.DeploymentPackageIdField = value;
                    this.RaisePropertyChanged("DeploymentPackageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int DeviceGroupId {
            get {
                return this.DeviceGroupIdField;
            }
            set {
                if ((this.DeviceGroupIdField.Equals(value) != true)) {
                    this.DeviceGroupIdField = value;
                    this.RaisePropertyChanged("DeviceGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<System.DateTime> DeploymentDate {
            get {
                return this.DeploymentDateField;
            }
            set {
                if ((this.DeploymentDateField.Equals(value) != true)) {
                    this.DeploymentDateField = value;
                    this.RaisePropertyChanged("DeploymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<System.DateTime> InstallationDate {
            get {
                return this.InstallationDateField;
            }
            set {
                if ((this.InstallationDateField.Equals(value) != true)) {
                    this.InstallationDateField = value;
                    this.RaisePropertyChanged("InstallationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<System.DateTime> RemovalDate {
            get {
                return this.RemovalDateField;
            }
            set {
                if ((this.RemovalDateField.Equals(value) != true)) {
                    this.RemovalDateField = value;
                    this.RaisePropertyChanged("RemovalDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupAssociationUpdate", Namespace="http://BlueDot.Mnow.Server.Runtime.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupAssociationUpdate : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationBase {
        
        private byte[] RowVersionField;
        
        private System.DateTime LastUpdatedWhenField;
        
        private string LastUpdatedByUserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string LastUpdatedByUserName {
            get {
                return this.LastUpdatedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserNameField, value) != true)) {
                    this.LastUpdatedByUserNameField = value;
                    this.RaisePropertyChanged("LastUpdatedByUserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupBase", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupUpdate))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAddition))]
    public partial class DeviceGroupBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSettingsField;
        
        private System.Nullable<int> ParentIdField;
        
        private string NameField;
        
        private string NotesField;
        
        private string TimeZoneIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSettings {
            get {
                return this.DeviceSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSettingsField, value) != true)) {
                    this.DeviceSettingsField = value;
                    this.RaisePropertyChanged("DeviceSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string TimeZoneId {
            get {
                return this.TimeZoneIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneIdField, value) != true)) {
                    this.TimeZoneIdField = value;
                    this.RaisePropertyChanged("TimeZoneId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroup", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroup : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupBase {
        
        private int IdField;
        
        private string LastUpdatedByUserField;
        
        private System.DateTime CreatedWhenField;
        
        private System.DateTime LastUpdatedWhenField;
        
        private string CreatedByUserField;
        
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUser {
            get {
                return this.LastUpdatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserField, value) != true)) {
                    this.LastUpdatedByUserField = value;
                    this.RaisePropertyChanged("LastUpdatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime LastUpdatedWhen {
            get {
                return this.LastUpdatedWhenField;
            }
            set {
                if ((this.LastUpdatedWhenField.Equals(value) != true)) {
                    this.LastUpdatedWhenField = value;
                    this.RaisePropertyChanged("LastUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupUpdate", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupUpdate : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupBase {
        
        private int IdField;
        
        private string LastUpdatedByUserField;
        
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string LastUpdatedByUser {
            get {
                return this.LastUpdatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdatedByUserField, value) != true)) {
                    this.LastUpdatedByUserField = value;
                    this.RaisePropertyChanged("LastUpdatedByUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupAddition", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupAddition : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupBase {
        
        private string CreatedByUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string CreatedByUser {
            get {
                return this.CreatedByUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserField, value) != true)) {
                    this.CreatedByUserField = value;
                    this.RaisePropertyChanged("CreatedByUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeploymentPackage", Namespace="http://BlueDot.Mnow.Server.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupDeploymentPackage))]
    public partial class DeploymentPackage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string NameField;
        
        private string TypeField;
        
        private string VersionField;
        
        private System.DateTime CreatedWhenField;
        
        private string CreatedByField;
        
        private int[] DependencyListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime CreatedWhen {
            get {
                return this.CreatedWhenField;
            }
            set {
                if ((this.CreatedWhenField.Equals(value) != true)) {
                    this.CreatedWhenField = value;
                    this.RaisePropertyChanged("CreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int[] DependencyList {
            get {
                return this.DependencyListField;
            }
            set {
                if ((object.ReferenceEquals(this.DependencyListField, value) != true)) {
                    this.DependencyListField = value;
                    this.RaisePropertyChanged("DependencyList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceGroupDeploymentPackage", Namespace="http://BlueDot.Mnow.Server.Runtime.DataContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class DeviceGroupDeploymentPackage : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeploymentPackage {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallOnDeviceWindowEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InstallOnDeviceWindowStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstallOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InstallRetriesField;
        
        private int DeviceGroupIdField;
        
        private System.Nullable<System.DateTime> InstallStartDateField;
        
        private System.Nullable<System.DateTime> DeployStartDateField;
        
        private System.Nullable<System.DateTime> RemoveStartDateField;
        
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallOnDeviceWindowEnd {
            get {
                return this.InstallOnDeviceWindowEndField;
            }
            set {
                if ((this.InstallOnDeviceWindowEndField.Equals(value) != true)) {
                    this.InstallOnDeviceWindowEndField = value;
                    this.RaisePropertyChanged("InstallOnDeviceWindowEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InstallOnDeviceWindowStart {
            get {
                return this.InstallOnDeviceWindowStartField;
            }
            set {
                if ((this.InstallOnDeviceWindowStartField.Equals(value) != true)) {
                    this.InstallOnDeviceWindowStartField = value;
                    this.RaisePropertyChanged("InstallOnDeviceWindowStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstallOrder {
            get {
                return this.InstallOrderField;
            }
            set {
                if ((this.InstallOrderField.Equals(value) != true)) {
                    this.InstallOrderField = value;
                    this.RaisePropertyChanged("InstallOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InstallRetries {
            get {
                return this.InstallRetriesField;
            }
            set {
                if ((this.InstallRetriesField.Equals(value) != true)) {
                    this.InstallRetriesField = value;
                    this.RaisePropertyChanged("InstallRetries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int DeviceGroupId {
            get {
                return this.DeviceGroupIdField;
            }
            set {
                if ((this.DeviceGroupIdField.Equals(value) != true)) {
                    this.DeviceGroupIdField = value;
                    this.RaisePropertyChanged("DeviceGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<System.DateTime> InstallStartDate {
            get {
                return this.InstallStartDateField;
            }
            set {
                if ((this.InstallStartDateField.Equals(value) != true)) {
                    this.InstallStartDateField = value;
                    this.RaisePropertyChanged("InstallStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.Nullable<System.DateTime> DeployStartDate {
            get {
                return this.DeployStartDateField;
            }
            set {
                if ((this.DeployStartDateField.Equals(value) != true)) {
                    this.DeployStartDateField = value;
                    this.RaisePropertyChanged("DeployStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public System.Nullable<System.DateTime> RemoveStartDate {
            get {
                return this.RemoveStartDateField;
            }
            set {
                if ((this.RemoveStartDateField.Equals(value) != true)) {
                    this.RemoveStartDateField = value;
                    this.RaisePropertyChanged("RemoveStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GroupAlreadyExists))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GroupDoesNotExist))]
    public partial class DefaultFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ErrorIdField;
        
        private string ErrorMessageField;
        
        private System.Guid CorrelationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupAlreadyExists", Namespace="http://Server.FaultContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class GroupAlreadyExists : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
    [System.SerializableAttribute()]
    public partial class GroupDoesNotExist : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", ConfigurationName="MCoreDeviceGroup.IDeviceGroupManagement")]
    public interface IDeviceGroupManagement {
        
        // CODEGEN: Generating message contract since the operation AssociateDeploymentPackages is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AssociateDeploymentPackages", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Associ" +
            "ateDeploymentPackagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Associ" +
            "ateDeploymentPackagesDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesResponse AssociateDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesRequest request);
        
        // CODEGEN: Generating message contract since the operation CreateGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="CreateGroup", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "GroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "GroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GroupAlreadyExists), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Create" +
            "GroupGroupAlreadyExistsFault", Name="GroupAlreadyExists", Namespace="http://Server.FaultContracts/2007/01")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupResponse CreateGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetAvailableDeploymentPackagesRequest) of message GetAvailableDeploymentPackagesRequest does not match the default value (GetAvailableDeploymentPackages)
        [System.ServiceModel.OperationContractAttribute(Action="GetAvailableDeploymentPackages", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetAva" +
            "ilableDeploymentPackagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetAva" +
            "ilableDeploymentPackagesDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesResponse GetAvailableDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetChildGroupsRequest) of message GetChildGroupsRequest does not match the default value (GetChildGroups)
        [System.ServiceModel.OperationContractAttribute(Action="GetChildGroups", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetChi" +
            "ldGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GroupDoesNotExist), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetChi" +
            "ldGroupsGroupDoesNotExistFault", Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetChi" +
            "ldGroupsDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsResponse GetChildGroups(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper name (GetDeploymentPackagesRequest) of message GetDeploymentPackagesRequest does not match the default value (GetDeploymentPackages)
        [System.ServiceModel.OperationContractAttribute(Action="GetDeploymentPackages", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetDep" +
            "loymentPackagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/GetDep" +
            "loymentPackagesDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesResponse GetDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesRequest request);
        
        // CODEGEN: Generating message contract since the operation RemoveGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RemoveGroup", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GroupDoesNotExist), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Remove" +
            "GroupGroupDoesNotExistFault", Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupResponse RemoveGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateAssociatedDeploymentPackage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAssociatedDeploymentPackage", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "AssociatedDeploymentPackageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "AssociatedDeploymentPackageDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociatedDeploymentPackageResponse UpdateAssociatedDeploymentPackage(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateAssociatedDeploymentPackageOrder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateAssociatedDeploymentPackageOrder", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "AssociatedDeploymentPackageOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "AssociatedDeploymentPackageOrderDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociatedDeploymentPackageOrderResponse UpdateAssociatedDeploymentPackageOrder(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateGroup is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UpdateGroup", ReplyAction="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "GroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DefaultFaultContract), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "GroupDefaultFaultContractFault", Name="DefaultFaultContract", Namespace="http://FaultContracts/Default/DefaultFaultContract")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GroupDoesNotExist), Action="http://BlueDot.Mnow.Server.ServiceContracts/2007/01/IDeviceGroupManagement/Update" +
            "GroupGroupDoesNotExistFault", Name="GroupDoesNotExist", Namespace="http://Server.FaultContracts/2007/01")]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupResponse UpdateGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssociateDeploymentPackagesRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class AssociateDeploymentPackagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationAddition[] DeploymentPackageList;
        
        public AssociateDeploymentPackagesRequest() {
        }
        
        public AssociateDeploymentPackagesRequest(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationAddition[] DeploymentPackageList) {
            this.DeploymentPackageList = DeploymentPackageList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AssociateDeploymentPackagesResponse {
        
        public AssociateDeploymentPackagesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class CreateGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAddition NewGroup;
        
        public CreateGroupRequest() {
        }
        
        public CreateGroupRequest(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAddition NewGroup) {
            this.NewGroup = NewGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateGroupResponse {
        
        public CreateGroupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailableDeploymentPackagesRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetAvailableDeploymentPackagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public int DeviceGroupId;
        
        public GetAvailableDeploymentPackagesRequest() {
        }
        
        public GetAvailableDeploymentPackagesRequest(int DeviceGroupId) {
            this.DeviceGroupId = DeviceGroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailableDeploymentPackagesResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetAvailableDeploymentPackagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeploymentPackage[] DeploymentPackageList;
        
        public GetAvailableDeploymentPackagesResponse() {
        }
        
        public GetAvailableDeploymentPackagesResponse(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeploymentPackage[] DeploymentPackageList) {
            this.DeploymentPackageList = DeploymentPackageList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChildGroupsRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetChildGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public System.Nullable<int> ParentGroupId;
        
        public GetChildGroupsRequest() {
        }
        
        public GetChildGroupsRequest(System.Nullable<int> ParentGroupId) {
            this.ParentGroupId = ParentGroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChildGroupsResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetChildGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroup[] ChildGroups;
        
        public GetChildGroupsResponse() {
        }
        
        public GetChildGroupsResponse(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroup[] ChildGroups) {
            this.ChildGroups = ChildGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeploymentPackagesRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetDeploymentPackagesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public int DeviceGroupId;
        
        public GetDeploymentPackagesRequest() {
        }
        
        public GetDeploymentPackagesRequest(int DeviceGroupId) {
            this.DeviceGroupId = DeviceGroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeploymentPackagesResponse", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class GetDeploymentPackagesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupDeploymentPackage[] DeploymentPackageList;
        
        public GetDeploymentPackagesResponse() {
        }
        
        public GetDeploymentPackagesResponse(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupDeploymentPackage[] DeploymentPackageList) {
            this.DeploymentPackageList = DeploymentPackageList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class RemoveGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public int GroupId;
        
        public RemoveGroupRequest() {
        }
        
        public RemoveGroupRequest(int GroupId) {
            this.GroupId = GroupId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RemoveGroupResponse {
        
        public RemoveGroupResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAssociationRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateAssociationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationUpdate Update;
        
        public UpdateAssociationRequest() {
        }
        
        public UpdateAssociationRequest(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationUpdate Update) {
            this.Update = Update;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAssociatedDeploymentPackageResponse {
        
        public UpdateAssociatedDeploymentPackageResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateAssociatedDeploymentPackageOrderResponse {
        
        public UpdateAssociatedDeploymentPackageOrderResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateGroupRequest", WrapperNamespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", IsWrapped=true)]
    public partial class UpdateGroupRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://BlueDot.Mnow.Server.ServiceContracts/2007/01", Order=0)]
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupUpdate ExistingGroup;
        
        public UpdateGroupRequest() {
        }
        
        public UpdateGroupRequest(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupUpdate ExistingGroup) {
            this.ExistingGroup = ExistingGroup;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateGroupResponse {
        
        public UpdateGroupResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IDeviceGroupManagementChannel : BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DeviceGroupManagementClient : System.ServiceModel.ClientBase<BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement>, BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement {
        
        public DeviceGroupManagementClient() {
        }
        
        public DeviceGroupManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceGroupManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceGroupManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceGroupManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.AssociateDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesRequest request) {
            return base.Channel.AssociateDeploymentPackages(request);
        }
        
        public void AssociateDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationAddition[] DeploymentPackageList) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesRequest();
            inValue.DeploymentPackageList = DeploymentPackageList;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.AssociateDeploymentPackagesResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).AssociateDeploymentPackages(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.CreateGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupRequest request) {
            return base.Channel.CreateGroup(request);
        }
        
        public void CreateGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAddition NewGroup) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupRequest();
            inValue.NewGroup = NewGroup;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.CreateGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).CreateGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.GetAvailableDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesRequest request) {
            return base.Channel.GetAvailableDeploymentPackages(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeploymentPackage[] GetAvailableDeploymentPackages(int DeviceGroupId) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesRequest();
            inValue.DeviceGroupId = DeviceGroupId;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetAvailableDeploymentPackagesResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).GetAvailableDeploymentPackages(inValue);
            return retVal.DeploymentPackageList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.GetChildGroups(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsRequest request) {
            return base.Channel.GetChildGroups(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroup[] GetChildGroups(System.Nullable<int> ParentGroupId) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsRequest();
            inValue.ParentGroupId = ParentGroupId;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetChildGroupsResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).GetChildGroups(inValue);
            return retVal.ChildGroups;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.GetDeploymentPackages(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesRequest request) {
            return base.Channel.GetDeploymentPackages(request);
        }
        
        public BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupDeploymentPackage[] GetDeploymentPackages(int DeviceGroupId) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesRequest();
            inValue.DeviceGroupId = DeviceGroupId;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.GetDeploymentPackagesResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).GetDeploymentPackages(inValue);
            return retVal.DeploymentPackageList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.RemoveGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupRequest request) {
            return base.Channel.RemoveGroup(request);
        }
        
        public void RemoveGroup(int GroupId) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupRequest();
            inValue.GroupId = GroupId;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.RemoveGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).RemoveGroup(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociatedDeploymentPackageResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.UpdateAssociatedDeploymentPackage(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest request) {
            return base.Channel.UpdateAssociatedDeploymentPackage(request);
        }
        
        public void UpdateAssociatedDeploymentPackage(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationUpdate Update) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest();
            inValue.Update = Update;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociatedDeploymentPackageResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).UpdateAssociatedDeploymentPackage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociatedDeploymentPackageOrderResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.UpdateAssociatedDeploymentPackageOrder(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest request) {
            return base.Channel.UpdateAssociatedDeploymentPackageOrder(request);
        }
        
        public void UpdateAssociatedDeploymentPackageOrder(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupAssociationUpdate Update) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociationRequest();
            inValue.Update = Update;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateAssociatedDeploymentPackageOrderResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).UpdateAssociatedDeploymentPackageOrder(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupResponse BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement.UpdateGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupRequest request) {
            return base.Channel.UpdateGroup(request);
        }
        
        public void UpdateGroup(BlueDot.MsBuild.Tasks.MCoreDeviceGroup.DeviceGroupUpdate ExistingGroup) {
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupRequest inValue = new BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupRequest();
            inValue.ExistingGroup = ExistingGroup;
            BlueDot.MsBuild.Tasks.MCoreDeviceGroup.UpdateGroupResponse retVal = ((BlueDot.MsBuild.Tasks.MCoreDeviceGroup.IDeviceGroupManagement)(this)).UpdateGroup(inValue);
        }
    }
}
